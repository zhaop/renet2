[package]
name = "renet2"
authors = ["koe <ukoe@protonmail.com>"]
description = "Server/Client network protocol library for multiplayer games, forked from renet"
edition = "2021"
keywords = ["gamedev", "networking"]
license = "MIT OR Apache-2.0"
readme = "../README.md"
repository = "https://github.com/UkoeHB/renet2"
version = "0.0.3"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
# Default features
default = ["native_transport"]

# Enable bevy integration
bevy = ["dep:bevy_ecs", "dep:bevy_reflect"]

# Enable serialization
serde = ["dep:serde", "serde/serde_derive"]

# Enable transports
transport = ["dep:renetcode2"]

# Enable native UdpSocket transports
native_transport = ["transport"]

# Enable in-memory transports
memory_transport = ["transport", "dep:crossbeam"]

# Enable the WebTransport server transport
wt_server_transport = [
    "transport",
    "dep:crossbeam",
    "dep:anyhow",
    "dep:rustls",
    "dep:rcgen",
    "dep:quinn",
    "dep:h3-quinn",
    "dep:h3-webtransport",
    "dep:tokio",
    "dep:http",
    "dep:futures",
    "dep:h3",
    "dep:time",
    #"dep:x509-cert",
    #"dep:spki",
    #"dep:base64",
    "dep:hmac-sha256",
    "dep:serde_json",
    "dep:form_urlencoded"
]

# Enable the WebTransport client transport (WASM only)
wt_client_transport = [
    "transport",
    "dep:async-channel",
    "dep:fragile",
    "dep:url",
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
    "dep:futures",
    "dep:js-sys",
    "dep:send_wrapper",
    "dep:getrandom",
    "dep:web-sys",
    "dep:serde_json"
]

[dependencies]
bevy_ecs = { version = "0.13", optional = true }
bevy_reflect = { version = "0.13", optional = true }
bytes = "1.1"
log = "0.4"
octets = "0.3"
renetcode2 = { path = "../renetcode2", version = "0.0.3", optional = true }
serde = { version = "1.0", optional = true }

# In-memory transport socket
crossbeam = { version = "0.8", optional = true }

# WebTransport shared
futures = { version = "0.3", optional = true }
serde_json = { version = "1.0", optional = true }

# WebTransport server
anyhow = { version = "1.0", optional = true }
rustls = { version = "0.21", optional = true }  #locked to 0.21 until quinn updates
rcgen = { version = "0.12", optional = true }
quinn = { version = "0.10", optional = true, default-features = false, features = [
    "runtime-tokio",
    "tls-rustls",
    "ring",
] }
h3-quinn = { version = "0.0.4", optional = true, git = "https://github.com/hyperium/h3", tag = "h3-quinn-v0.0.4" }
h3-webtransport = { version = "0.1", optional = true, git = "https://github.com/hyperium/h3" }
tokio = { version = "1.32", optional = true, features = ["full"] }
http = { version = "1.0", optional = true }
h3 = { version = "0.0.4", optional = true, git = "https://github.com/hyperium/h3", features = [
    "i-implement-a-third-party-backend-and-opt-into-breaking-changes"
], tag = "h3-v0.0.4" }
time = { version = "0.3", optional = true }
#x509-cert = { version = "0.2", optional = true }
#spki = { version = "0.7", optional = true, features = ["fingerprint"] }
#base64 = { version = "0.22", optional = true }
hmac-sha256 = { version = "1.1", optional = true }
form_urlencoded = { version = "1.2", optional = true }

# WebTransport client
async-channel = { version = "2.2", optional = true }
fragile = { version = "2.0", optional = true }
url = { version = "2.4", optional = true }
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
js-sys = { version = "0.3", optional = true }
send_wrapper = { version = "0.6", optional = true, features = ["futures"] }
getrandom = { version = "0.2", optional = true, features = ["js"] }

[dependencies.web-sys]
version = "0.3"
optional = true
features = [
    "DomException",
    "ReadableStream",
    "WritableStream",
    "ReadableStreamDefaultReader",
    "WritableStreamDefaultWriter",
]

[dev-dependencies]
env_logger = "0.11"
